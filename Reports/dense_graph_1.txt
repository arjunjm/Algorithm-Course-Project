Generating graph with 5000 vertices in which every vertex has an edge to about 20 percent of the other vertices
 Graph generated in 249.83 seconds 

==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 1)
Source Vertex = 3289
Destination Vertex = 3376

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 3289-->3377-->1749-->3401-->1284-->4411-->2876-->2066-->3321-->4494-->3597-->1993-->2394-->1180-->2021-->3644-->2855-->2931-->2893-->391-->1779-->3361-->663-->117-->1034-->2327-->4032-->234-->3039-->3303-->266-->231-->2198-->3075-->1400-->2863-->584-->2137-->3195-->2334-->1651-->1181-->2091-->2274-->1412-->1403-->2578-->2886-->2087-->1996-->1318-->2469-->2445-->2252-->2057-->1894-->1126-->2796-->1192-->1358-->1892-->2031-->886-->3884-->601-->3859-->3258-->2155-->3225-->3249-->1047-->931-->3376

Max Bandwidth Value :: 9979

Running time : 0.89 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 3289-->3377-->1749-->3401-->1284-->4411-->2876-->2066-->3321-->4494-->3597-->3660-->3959-->751-->2249-->2213-->2236-->502-->2890-->2612-->342-->1260-->1582-->507-->1056-->2270-->477-->587-->4269-->1305-->356-->3964-->713-->520-->1385-->654-->2786-->1577-->2389-->4607-->1776-->3881-->4952-->503-->297-->2120-->3935-->253-->2001-->3507-->4203-->4493-->2285-->3115-->346-->2106-->874-->334-->88-->4609-->4736-->3652-->4253-->4117-->1221-->3777-->1996-->2087-->2886-->2452-->2937-->3833-->1586-->1604-->4982-->3196-->2263-->985-->1475-->3779-->3258-->2155-->3225-->3249-->1047-->931-->3376

Max Bandwidth Value :: 9979


Running time : 1.36 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 3289-->3377-->1749-->3401-->1284-->4411-->2876-->2066-->3321-->3952-->4907-->4145-->3743-->4239-->877-->1342-->255-->922-->996-->1234-->4452-->2426-->4398-->931-->3376

Max Bandwidth Value :: 9979


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.21 seconds
Total Running time : 42.64 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 2)
Source Vertex = 2533
Destination Vertex = 2903

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 2533-->1896-->526-->2353-->112-->968-->824-->650-->1599-->761-->1781-->2518-->1260-->1582-->507-->1056-->2270-->477-->156-->516-->2705-->2617-->3233-->3503-->3255-->593-->1149-->3134-->3169-->2178-->1840-->3295-->3065-->2903

Max Bandwidth Value :: 9985

Running time : 1.09002 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 2533-->1896-->526-->2405-->1782-->140-->4127-->4475-->1719-->2593-->908-->3424-->1317-->2082-->1764-->682-->3918-->4338-->4015-->3169-->2178-->1840-->3295-->3065-->2903

Max Bandwidth Value :: 9985


Running time : 1.21002 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 2533-->1896-->1831-->1215-->332-->1228-->1333-->822-->2878-->1254-->3908-->2010-->3479-->3736-->1568-->3214-->3206-->1983-->1322-->2400-->503-->4952-->4029-->3328-->1054-->2608-->2380-->141-->444-->2390-->715-->470-->4000-->587-->477-->2270-->1056-->507-->1582-->1260-->342-->2612-->2890-->280-->4581-->4089-->4690-->3809-->2149-->3503-->3255-->593-->1149-->3134-->3169-->2178-->1840-->3295-->3065-->2903

Max Bandwidth Value :: 9985


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.03 seconds
Total Running time : 42.7 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 3)
Source Vertex = 1541
Destination Vertex = 2329

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 1541-->1665-->1847-->751-->2249-->2213-->209-->224-->715-->901-->1120-->79-->1025-->3-->167-->997-->1602-->2240-->822-->1333-->1228-->332-->1215-->228-->531-->43-->1909-->1440-->1782-->140-->659-->1622-->891-->1085-->2207-->3103-->261-->2329

Max Bandwidth Value :: 9979

Running time : 0.700032 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 1541-->1665-->1847-->751-->2249-->2213-->209-->224-->540-->1536-->2964-->2899-->1353-->4570-->4603-->3120-->3519-->3288-->941-->3323-->769-->3251-->395-->1886-->1803-->896-->2278-->4537-->4621-->743-->3872-->3034-->4657-->3397-->4425-->3041-->4533-->2235-->2661-->947-->456-->3064-->3000-->3849-->3891-->2262-->4046-->4144-->3204-->2329

Max Bandwidth Value :: 9979


Running time : 1.36 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 1541-->1665-->1847-->751-->3959-->3660-->3597-->1993-->4121-->397-->543-->3610-->972-->2897-->3529-->3755-->3003-->2791-->3901-->4517-->4740-->100-->342-->1260-->1582-->507-->1056-->2270-->477-->587-->4000-->2918-->1945-->4951-->4201-->4790-->2183-->2643-->3941-->41-->4079-->2329

Max Bandwidth Value :: 9979


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.87 seconds
Total Running time : 43.29 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 4)
Source Vertex = 2369
Destination Vertex = 4759

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 2369-->407-->1146-->3236-->339-->2373-->2113-->2845-->796-->1317-->3424-->908-->2593-->1719-->4396-->576-->3774-->1549-->1313-->3359-->1575-->1937-->1984-->2646-->3748-->3588-->822-->1333-->1228-->332-->1215-->1831-->1896-->526-->2405-->1782-->2779-->162-->612-->2043-->909-->2021-->3644-->2855-->2931-->2893-->391-->1779-->3361-->663-->117-->1034-->2327-->4032-->234-->3039-->3303-->266-->231-->2198-->3075-->1400-->2863-->584-->2137-->3195-->2334-->1651-->1181-->2091-->2274-->1412-->1403-->2578-->2886-->2087-->1996-->1318-->2469-->2445-->2252-->2057-->1894-->1126-->2796-->1192-->1358-->1892-->2031-->886-->3884-->601-->3859-->3258-->2155-->3225-->3019-->1124-->4112-->1817-->2175-->4363-->887-->3570-->3938-->740-->2339-->1038-->2725-->4782-->2547-->1743-->1479-->3100-->1335-->574-->4973-->4759

Max Bandwidth Value :: 9980

Running time : 0.769984 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 2369-->407-->1146-->3236-->339-->2373-->2113-->4109-->4557-->4433-->3585-->1655-->4996-->3821-->2270-->477-->587-->4269-->1305-->356-->2063-->11-->4446-->1206-->3970-->4093-->4499-->4045-->2106-->346-->2011-->4118-->4537-->4621-->3599-->1128-->2298-->4887-->3772-->886-->3884-->601-->3859-->3258-->2155-->3225-->3019-->1124-->4112-->1817-->2175-->4363-->887-->3570-->3938-->740-->2339-->1038-->2725-->4782-->2547-->1743-->1479-->3100-->1335-->574-->4973-->4759

Max Bandwidth Value :: 9980


Running time : 1.38003 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 2369-->407-->1146-->3236-->339-->2373-->2113-->4109-->4557-->4433-->3585-->1655-->4996-->3821-->2270-->1056-->507-->1582-->1260-->342-->2612-->2890-->280-->4581-->4089-->4690-->3809-->2149-->3503-->3233-->2617-->2705-->3477-->3653-->4695-->4789-->1536-->4076-->317-->2815-->4652-->3713-->3347-->1038-->2725-->4782-->2547-->1743-->1479-->3100-->1335-->574-->4973-->4759

Max Bandwidth Value :: 9980


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.56 seconds
Total Running time : 44.28 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 5)
Source Vertex = 2093
Destination Vertex = 570

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 2093-->266-->231-->2198-->3075-->3045-->4750-->2109-->2609-->2424-->2705-->2617-->3233-->3503-->3255-->4407-->2248-->2801-->245-->3937-->4581-->280-->2890-->2612-->342-->1260-->1582-->507-->1056-->2270-->477-->570

Max Bandwidth Value :: 9989

Running time : 0.789984 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 2093-->266-->231-->2198-->3075-->3045-->4750-->1364-->1147-->1654-->1680-->4346-->4721-->4325-->1454-->404-->4696-->4415-->1639-->3574-->3727-->3799-->3267-->3188-->2931-->2893-->3660-->3597-->1993-->4121-->397-->543-->3610-->972-->2897-->3529-->3755-->3003-->2791-->3901-->4517-->4740-->100-->342-->1260-->1582-->507-->1056-->2270-->477-->570

Max Bandwidth Value :: 9989


Running time : 1.37002 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 2093-->266-->231-->2198-->3075-->3045-->4750-->2109-->2609-->2424-->2705-->2617-->3233-->3503-->2149-->3809-->4690-->4089-->4581-->280-->2890-->2612-->342-->1260-->1582-->507-->1056-->2270-->477-->570

Max Bandwidth Value :: 9989


Algorithm Running Time (excluding the time for data structure creation and intialization) : 12.04 seconds
Total Running time : 45.34 seconds
---------------------------------------------------------------------------


Program done executing..Press any key to quit!
