Generating graph with 5000 vertices in which every vertex has an edge to about 20 percent of the other vertices
 Graph generated in 257.16 seconds 

==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 1)
Source Vertex = 4561
Destination Vertex = 4706

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 4561-->3558-->3681-->2438-->3800-->3649-->1515-->3206-->3182-->2203-->2840-->302-->1181-->1534-->101-->36-->2889-->2800-->2156-->104-->2614-->2574-->1759-->1386-->1112-->422-->2280-->2870-->433-->70-->2853-->303-->1201-->1408-->2206-->2385-->2155-->2851-->2927-->686-->2625-->600-->2643-->1442-->1705-->1516-->229-->1406-->1450-->1367-->1423-->2983-->2496-->2290-->540-->2718-->476-->2510-->33-->1924-->2019-->1997-->802-->2797-->4782-->4706

Max Bandwidth Value :: 9983

Running time : 0.86 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 4561-->3558-->3681-->2438-->3800-->3649-->1515-->3206-->1878-->3880-->4937-->1169-->1785-->2104-->3190-->2054-->3364-->914-->1861-->2171-->2649-->2995-->3294-->2540-->814-->3330-->3493-->4550-->721-->4726-->211-->965-->734-->2937-->4284-->2426-->2748-->2817-->1257-->549-->1057-->443-->195-->763-->4729-->3437-->3377-->2371-->2510-->33-->1924-->1673-->4950-->3464-->2509-->3705-->3664-->2961-->3961-->1391-->134-->1997-->802-->2797-->4782-->4706

Max Bandwidth Value :: 9983


Running time : 1.44 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 4561-->3558-->3681-->4095-->1953-->756-->1510-->2265-->1258-->2184-->3680-->3412-->1347-->802-->2797-->4782-->4706

Max Bandwidth Value :: 9983


Algorithm Running Time (excluding the time for data structure creation and intialization) : 12.19 seconds
Total Running time : 45.4 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 2)
Source Vertex = 4863
Destination Vertex = 787

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 4863-->3497-->3521-->4031-->516-->4518-->1756-->2425-->3080-->2105-->2204-->3880-->4937-->1169-->3884-->2669-->4492-->4599-->70-->338-->295-->518-->52-->213-->1931-->1133-->3616-->3609-->732-->46-->2806-->3694-->1516-->229-->1406-->73-->4145-->2299-->2436-->3120-->2886-->2132-->1344-->226-->3813-->879-->3639-->346-->2246-->301-->4159-->3805-->3913-->721-->4726-->211-->787

Max Bandwidth Value :: 9989

Running time : 1.18998 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 4863-->3497-->3521-->4031-->516-->4518-->1756-->2425-->3080-->2105-->2204-->3880-->4937-->1169-->3884-->2669-->4492-->4599-->70-->338-->295-->518-->52-->213-->1931-->1133-->3616-->3609-->732-->46-->2806-->3694-->1516-->229-->1406-->73-->4145-->2299-->2436-->3120-->2886-->2132-->1344-->226-->3813-->879-->3639-->346-->2246-->301-->4159-->3805-->3913-->721-->4726-->211-->787

Max Bandwidth Value :: 9989


Running time : 1.45002 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 4863-->3497-->3521-->4031-->516-->4518-->1756-->2425-->3080-->2105-->2204-->3880-->4937-->1169-->3884-->2669-->4492-->4599-->70-->338-->295-->518-->52-->213-->1931-->1133-->3616-->3609-->732-->46-->2806-->3694-->1516-->229-->1406-->73-->4145-->2299-->2436-->3120-->2886-->2132-->1344-->226-->3813-->879-->3639-->346-->2246-->301-->4159-->3805-->3913-->721-->4726-->211-->787

Max Bandwidth Value :: 9989


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.88 seconds
Total Running time : 45.31 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 3)
Source Vertex = 624
Destination Vertex = 3470

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 624-->2858-->2591-->1246-->2361-->344-->1701-->2265-->1510-->2571-->2944-->3118-->711-->2232-->2991-->2335-->2489-->2383-->1329-->669-->2598-->3000-->2242-->1572-->1309-->2449-->2718-->476-->2510-->33-->1924-->2917-->2132-->1344-->226-->2928-->2713-->246-->48-->218-->278-->2658-->3506-->1143-->395-->3594-->3327-->619-->2883-->562-->1156-->107-->469-->2341-->1354-->2381-->3752-->3927-->961-->988-->1152-->2372-->4482-->1114-->483-->3768-->3470

Max Bandwidth Value :: 9983

Running time : 0.88 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 624-->2858-->4377-->3160-->3022-->4796-->3241-->203-->2842-->3137-->2534-->3560-->4672-->3402-->1380-->778-->4593-->954-->455-->952-->3155-->4050-->4474-->1875-->1516-->229-->1406-->1450-->1950-->843-->4221-->669-->2598-->3000-->2242-->1572-->1309-->2449-->2718-->1890-->3947-->1234-->879-->845-->1033-->4761-->1111-->663-->808-->3100-->3154-->2186-->2150-->854-->2191-->1280-->1058-->4760-->1893-->1368-->2527-->1073-->1828-->2089-->1621-->2369-->1287-->2542-->4228-->708-->2267-->3474-->1807-->1618-->2904-->4163-->400-->3836-->4491-->2341-->1354-->2381-->3752-->3927-->961-->988-->1152-->2372-->4482-->1114-->483-->3768-->3470

Max Bandwidth Value :: 9983


Running time : 1.45002 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 624-->2858-->2591-->1246-->2361-->344-->402-->4268-->116-->3378-->4296-->3116-->4801-->4041-->40-->1493-->3294-->2540-->814-->3330-->3493-->4550-->721-->3913-->3805-->4159-->301-->2246-->346-->3639-->879-->3813-->226-->1344-->2132-->2886-->3120-->2436-->2299-->4145-->73-->1406-->229-->1516-->3694-->2806-->46-->732-->3609-->3616-->1133-->1931-->213-->52-->518-->295-->338-->70-->4599-->4340-->3241-->4796-->3022-->3326-->3680-->3412-->1347-->802-->2026-->2532-->2139-->2517-->134-->1391-->489-->655-->1186-->1656-->958-->4464-->2290-->2496-->710-->970-->1224-->1893-->4760-->4149-->3828-->4143-->848-->4294-->1982-->4437-->2844-->1132-->4691-->4085-->849-->3581-->553-->2579-->2416-->2372-->4482-->1114-->483-->3768-->3470

Max Bandwidth Value :: 9983


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.87 seconds
Total Running time : 45.4 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 4)
Source Vertex = 1178
Destination Vertex = 3735

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 1178-->1159-->4270-->3247-->2055-->2555-->3751-->1632-->2287-->229-->1406-->1450-->1367-->1423-->2983-->3194-->3088-->641-->2971-->2105-->3080-->2925-->2867-->2799-->3200-->2132-->2917-->1924-->33-->2510-->476-->2718-->2449-->1309-->1572-->2242-->3000-->2598-->669-->1329-->2383-->2489-->2335-->2991-->2939-->930-->672-->3010-->3207-->1855-->1958-->3343-->60-->1394-->736-->3424-->2824-->1280-->3919-->3735

Max Bandwidth Value :: 9986

Running time : 0.8 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 1178-->1159-->4270-->2697-->4791-->3631-->1853-->2373-->2595-->1309-->1572-->2242-->3000-->2598-->669-->1329-->2383-->753-->2330-->4604-->5000-->1039-->982-->3307-->659-->2751-->1123-->494-->1168-->4974-->1445-->1256-->4184-->3919-->3735

Max Bandwidth Value :: 9986


Running time : 1.41002 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 1178-->1159-->4270-->2697-->4791-->714-->3697-->3616-->3609-->732-->46-->2806-->3694-->1516-->229-->1406-->73-->4145-->2299-->2436-->3120-->2886-->2132-->1344-->226-->3813-->879-->845-->1033-->3348-->3596-->659-->2751-->1123-->494-->1168-->4974-->1445-->1256-->4184-->3919-->3735

Max Bandwidth Value :: 9986


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.87 seconds
Total Running time : 44.98 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 5)
Source Vertex = 608
Destination Vertex = 1075

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 608-->2505-->1288-->2263-->2574-->1759-->1386-->1112-->422-->2280-->2870-->433-->70-->2853-->303-->1201-->1408-->2206-->2385-->2155-->2851-->2927-->686-->210-->480-->2400-->2324-->441-->1755-->349-->600-->2643-->1442-->1705-->1516-->229-->1406-->2368-->2428-->1762-->1890-->2718-->476-->2510-->33-->1924-->2514-->2788-->922-->2958-->1866-->548-->602-->1880-->1075

Max Bandwidth Value :: 9978

Running time : 0.810016 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 608-->2505-->4371-->334-->3236-->4889-->1115-->2815-->3503-->418-->318-->2994-->3712-->3302-->3164-->2449-->1309-->4589-->4224-->225-->369-->2369-->1621-->2089-->54-->4362-->4009-->1660-->4370-->3108-->2591-->1246-->2361-->344-->402-->4268-->116-->1228-->3347-->4213-->2382-->2613-->3511-->2315-->425-->4600-->2712-->535-->4917-->3789-->2821-->993-->3189-->1000-->64-->4132-->1201-->1408-->3294-->2540-->814-->3330-->3493-->3408-->1908-->3496-->3989-->4509-->3859-->2534-->3137-->2842-->203-->4175-->4293-->2352-->3868-->1191-->4478-->1991-->4201-->904-->944-->3652-->4583-->1565-->115-->3216-->602-->1880-->1075

Max Bandwidth Value :: 9978


Running time : 1.4 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 608-->2505-->1288-->2263-->2574-->1759-->1386-->1112-->3818-->3026-->4938-->961-->3927-->3752-->2381-->1354-->2341-->469-->2434-->1976-->2382-->2986-->1092-->3404-->4079-->1143-->3506-->2658-->278-->4217-->3829-->2077-->824-->657-->738-->2726-->232-->2920-->2899-->3218-->463-->2383-->2489-->2335-->4660-->3135-->932-->4737-->3556-->2014-->3485-->4402-->448-->1911-->534-->4266-->4156-->1186-->655-->489-->1391-->134-->2517-->2139-->2532-->2026-->802-->1347-->3412-->3680-->3326-->3022-->4796-->3241-->203-->2842-->3137-->2534-->3859-->4441-->2400-->480-->210-->2761-->2951-->1933-->1330-->4920-->415-->351-->602-->1880-->1075

Max Bandwidth Value :: 9978


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.8 seconds
Total Running time : 44.44 seconds
---------------------------------------------------------------------------


Program done executing..Press any key to quit!
