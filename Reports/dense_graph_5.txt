Generating graph with 5000 vertices in which every vertex has an edge to about 20 percent of the other vertices
 Graph generated in 262.82 seconds 

==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 1)
Source Vertex = 4289
Destination Vertex = 2034

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 4289-->595-->956-->365-->737-->1355-->2085-->1879-->2460-->2532-->2360-->2518-->178-->208-->2257-->1114-->1035-->68-->675-->1922-->1972-->1699-->2510-->2555-->2203-->635-->1565-->1416-->1735-->2392-->863-->861-->2337-->2285-->2662-->2073-->311-->803-->2221-->1711-->2103-->2076-->563-->3121-->263-->3075-->2833-->501-->1427-->1433-->1264-->2911-->2836-->871-->677-->2135-->1984-->2100-->708-->1180-->1103-->1845-->869-->2034

Max Bandwidth Value :: 9983

Running time : 0.84 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 4289-->595-->4099-->4315-->2151-->2748-->1412-->2213-->2587-->1597-->1290-->4441-->3271-->3766-->1358-->3167-->2877-->4812-->1655-->958-->3480-->3843-->1534-->1604-->1702-->2856-->4827-->3100-->3297-->921-->1447-->4518-->4592-->2844-->4008-->2109-->1625-->1902-->827-->1587-->4661-->875-->3553-->2544-->2221-->803-->311-->2073-->785-->3243-->2168-->3210-->3606-->3341-->641-->1728-->91-->1695-->1155-->1401-->1826-->2298-->3544-->4919-->3268-->1845-->869-->2034

Max Bandwidth Value :: 9983


Running time : 1.44 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 4289-->595-->956-->365-->737-->1355-->2085-->1879-->2460-->2532-->3544-->4919-->3268-->3235-->299-->4717-->4724-->1312-->855-->3777-->3929-->1734-->447-->3095-->4110-->2359-->3190-->3341-->3606-->3210-->2168-->3243-->2007-->4049-->1176-->2724-->429-->2361-->1785-->4863-->1080-->4659-->1033-->4060-->3707-->1103-->1845-->869-->2034

Max Bandwidth Value :: 9983


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.78 seconds
Total Running time : 45.19 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 2)
Source Vertex = 3419
Destination Vertex = 2448

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 3419-->2557-->1604-->1534-->3843-->3689-->3800-->3209-->2958-->2941-->2755-->3768-->1533-->4222-->3465-->3133-->3500-->1659-->1553-->63-->1173-->2448

Max Bandwidth Value :: 9974

Running time : 1.15002 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 3419-->2557-->1604-->669-->2560-->2654-->4702-->35-->525-->4572-->4524-->1356-->324-->4614-->1916-->2836-->120-->3966-->4863-->1785-->877-->2677-->934-->4834-->4222-->3465-->3133-->3500-->1659-->1553-->63-->1173-->2448

Max Bandwidth Value :: 9974


Running time : 1.4 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 3419-->2557-->1604-->669-->2560-->2654-->4702-->35-->525-->4572-->1825-->204-->4110-->2359-->3190-->3341-->3606-->3210-->2168-->2725-->2755-->3768-->1533-->4222-->3465-->3133-->3500-->1659-->1553-->63-->1173-->2448

Max Bandwidth Value :: 9974


Algorithm Running Time (excluding the time for data structure creation and intialization) : 12.12 seconds
Total Running time : 46.43 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 3)
Source Vertex = 1539
Destination Vertex = 4155

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 1539-->386-->3329-->3201-->2176-->4726-->4688-->776-->2667-->543-->138-->3473-->3918-->3523-->2458-->941-->2192-->1734-->447-->3095-->2898-->2286-->1315-->3322-->2399-->2570-->186-->2834-->3319-->2774-->2812-->1288-->1155-->1695-->234-->1497-->690-->720-->2560-->669-->1604-->1534-->83-->1786-->2723-->1630-->356-->2164-->223-->1176-->2724-->429-->2361-->1785-->877-->2677-->921-->1447-->2400-->2956-->3840-->558-->2237-->3050-->1060-->1617-->3135-->3788-->3489-->4155

Max Bandwidth Value :: 9983

Running time : 0.819968 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 1539-->386-->3329-->3201-->2176-->4726-->4688-->776-->2667-->543-->138-->3473-->3918-->3523-->2458-->941-->2192-->1734-->3929-->3777-->855-->1312-->2199-->4037-->3662-->4354-->1936-->1417-->22-->3607-->4472-->4199-->3910-->178-->208-->506-->52-->3031-->3498-->1640-->1691-->1562-->1951-->1759-->1808-->4862-->443-->2220-->2358-->2033-->2120-->996-->597-->2910-->4921-->4822-->216-->180-->4130-->4697-->3708-->3610-->3827-->46-->3961-->1279-->4316-->4731-->4594-->1486-->4669-->1795-->2052-->3982-->4496-->1416-->1565-->635-->2203-->2555-->2510-->2919-->4509-->1339-->2941-->2958-->3209-->3800-->3689-->3843-->3480-->2883-->945-->3853-->4245-->3788-->3489-->4155

Max Bandwidth Value :: 9983


Running time : 1.45002 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 1539-->386-->3329-->3201-->2176-->4726-->4688-->776-->2667-->543-->138-->3473-->3918-->3523-->2458-->941-->2192-->1734-->447-->3095-->4110-->2359-->3190-->3341-->2971-->2865-->3317-->698-->2046-->3853-->4245-->3788-->3489-->4155

Max Bandwidth Value :: 9983


Algorithm Running Time (excluding the time for data structure creation and intialization) : 11.93 seconds
Total Running time : 45.54 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 4)
Source Vertex = 4868
Destination Vertex = 3487

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 4868-->3022-->4119-->3139-->2218-->339-->1542-->1652-->157-->1621-->3339-->1365-->2289-->468-->1449-->1233-->250-->762-->2442-->1680-->91-->1695-->234-->1497-->690-->50-->378-->475-->2489-->185-->2283-->1106-->1988-->447-->3095-->3487

Max Bandwidth Value :: 9980

Running time : 0.8 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 4868-->3022-->4119-->4127-->1682-->1222-->208-->178-->3910-->3384-->3535-->3943-->1183-->3029-->4314-->2531-->278-->3421-->108-->2226-->3882-->4856-->2242-->4354-->1936-->2562-->1867-->2007-->4049-->1176-->223-->3206-->4603-->1580-->321-->672-->2845-->4436-->437-->3520-->811-->1339-->2941-->2755-->4261-->2090-->150-->1725-->3119-->307-->2703-->97-->2088-->2673-->4195-->4771-->1843-->1410-->2344-->2112-->2215-->2961-->273-->3847-->783-->1759-->1808-->3394-->2191-->3070-->521-->1594-->2994-->2903-->4709-->185-->2283-->1106-->1988-->447-->3095-->3487

Max Bandwidth Value :: 9980


Running time : 1.38 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 4868-->3022-->4119-->4609-->4982-->2875-->1733-->1793-->4646-->4020-->4436-->2845-->3080-->3005-->2874-->3628-->1307-->3929-->1734-->447-->3095-->3487

Max Bandwidth Value :: 9980


Algorithm Running Time (excluding the time for data structure creation and intialization) : 12.44 seconds
Total Running time : 46.73 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 5)
Source Vertex = 2238
Destination Vertex = 1962

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 2238-->2986-->3365-->3001-->4629-->4780-->2506-->4110-->204-->1825-->1105-->3319-->2834-->186-->1809-->1962

Max Bandwidth Value :: 9987

Running time : 0.84 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 2238-->2986-->3365-->3001-->4629-->4780-->2506-->4110-->2359-->3190-->3341-->3606-->4179-->2503-->2568-->223-->1176-->2724-->429-->2361-->1785-->4863-->2901-->4426-->1232-->1060-->1617-->3135-->3788-->4245-->1962

Max Bandwidth Value :: 9987


Running time : 1.45997 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 2238-->2986-->3365-->3001-->4629-->4780-->2506-->4110-->2359-->3190-->3341-->2971-->2865-->3317-->698-->2046-->3853-->4245-->1962

Max Bandwidth Value :: 9987


Algorithm Running Time (excluding the time for data structure creation and intialization) : 12.2 seconds
Total Running time : 45.94 seconds
---------------------------------------------------------------------------


Program done executing..Press any key to quit!
