Generating graph with 5000 vertices in which every vertex has degree 6!
Graph generated in 0.14 seconds 

==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 1)
Source Vertex = 2729
Destination Vertex = 250

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 2729-->2064-->3667-->3412-->4435-->3691-->613-->1034-->324-->1250-->3211-->200-->1703-->1482-->2815-->1231-->2119-->1909-->2911-->1902-->1077-->3028-->3055-->2536-->2582-->416-->2746-->1724-->720-->2434-->2130-->2050-->2144-->1086-->1071-->1409-->107-->1783-->1890-->635-->1661-->1463-->1253-->1097-->2907-->2477-->250

Max Bandwidth Value :: 6560

Running time : 0.25 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 2729-->2064-->3667-->3412-->4435-->3691-->3170-->3312-->142-->2329-->3224-->3891-->2540-->3875-->968-->3431-->3711-->2925-->1859-->328-->2893-->3857-->4259-->3762-->4126-->3646-->1493-->753-->2091-->4965-->1330-->1231-->2119-->1909-->2911-->2225-->1423-->497-->3882-->3506-->985-->2988-->3107-->264-->1401-->603-->4334-->4187-->1138-->4602-->351-->2396-->4882-->1341-->287-->121-->2526-->2503-->3147-->1936-->3529-->1631-->1142-->2982-->4294-->1884-->2532-->1736-->4463-->1521-->250

Max Bandwidth Value :: 6560


Running time : 0.07 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 2729-->2064-->3667-->3412-->4435-->3691-->3170-->4220-->2374-->3921-->1977-->1699-->2566-->2095-->2648-->1049-->1260-->4737-->2631-->2769-->4052-->1905-->2003-->3432-->241-->1537-->2190-->4036-->4240-->1794-->2124-->998-->3013-->4612-->496-->2284-->2288-->755-->4502-->1229-->2539-->3118-->2816-->4728-->3968-->4157-->3883-->1307-->4333-->2196-->2832-->2748-->1765-->4695-->3136-->3419-->2004-->1926-->2490-->1001-->1322-->3370-->3464-->1571-->2189-->508-->3512-->1091-->484-->3313-->3316-->991-->966-->4851-->6-->4388-->557-->250

Max Bandwidth Value :: 6560


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.03 seconds
Total Running time : 0.14 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 2)
Source Vertex = 2938
Destination Vertex = 4647

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 2938-->10-->3939-->233-->3182-->585-->1992-->67-->964-->4837-->402-->882-->340-->3546-->1091-->3512-->508-->2189-->1571-->3464-->3370-->1322-->1001-->2490-->1926-->2004-->3419-->3136-->4695-->1765-->2748-->2832-->2196-->4333-->1307-->3883-->4157-->3968-->4728-->2816-->3118-->2539-->1229-->3850-->4647

Max Bandwidth Value :: 7867

Running time : 0.34 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 2938-->10-->3939-->233-->3182-->585-->1992-->67-->964-->4837-->402-->882-->340-->3546-->1091-->3512-->508-->2189-->1571-->3464-->3370-->1322-->1001-->2490-->1926-->2004-->3419-->3136-->4695-->1765-->2748-->2832-->2196-->4333-->1307-->3883-->4157-->3968-->4728-->2816-->3118-->2539-->1229-->3850-->4647

Max Bandwidth Value :: 7867


Running time : 0.07 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 2938-->10-->3939-->233-->3182-->585-->1992-->67-->964-->4837-->402-->882-->340-->3546-->1091-->3512-->508-->2189-->1571-->3464-->3370-->1322-->1001-->2490-->1926-->2004-->3419-->3136-->4695-->1765-->2748-->2832-->2196-->4333-->1307-->3883-->4157-->3968-->4728-->2816-->3118-->2539-->1229-->3850-->4647

Max Bandwidth Value :: 7867


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.04 seconds
Total Running time : 0.15 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 3)
Source Vertex = 2597
Destination Vertex = 2174

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 2597-->3790-->4436-->3296-->1096-->2693-->430-->4940-->1567-->6-->4388-->557-->250-->2477-->1984-->1848-->268-->262-->427-->1549-->1602-->1465-->3894-->1856-->2876-->3256-->2871-->877-->2174

Max Bandwidth Value :: 7439

Running time : 0.29 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 2597-->3790-->4436-->3296-->1096-->2693-->430-->4940-->1567-->6-->4388-->557-->250-->2477-->1984-->1848-->268-->262-->427-->1549-->1602-->1465-->3894-->1856-->2876-->3256-->2871-->877-->2174

Max Bandwidth Value :: 7439


Running time : 0.05 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 2597-->3790-->4436-->3296-->1096-->2693-->430-->4940-->1567-->6-->4388-->557-->250-->2477-->1984-->1848-->268-->262-->427-->1549-->1602-->1465-->3894-->1856-->2876-->3256-->2871-->877-->2174

Max Bandwidth Value :: 7439


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.03 seconds
Total Running time : 0.13 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 4)
Source Vertex = 753
Destination Vertex = 2742

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 753-->3277-->4162-->3943-->3206-->45-->4555-->4736-->3380-->1548-->4059-->875-->4836-->3060-->4685-->1261-->1412-->3874-->4239-->4888-->69-->4047-->476-->1349-->1309-->3254-->596-->1566-->1451-->1834-->2742

Max Bandwidth Value :: 6535

Running time : 0.29 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 753-->3277-->4162-->3943-->3206-->45-->4555-->4736-->3380-->1548-->4059-->875-->4836-->3060-->4685-->1261-->1412-->3874-->4239-->4888-->69-->4952-->4906-->1587-->3442-->2890-->1585-->4660-->826-->3584-->1913-->1583-->4597-->4138-->3935-->3004-->3384-->978-->2359-->3491-->2958-->3601-->428-->3955-->2319-->1400-->2587-->622-->2180-->352-->3189-->861-->725-->2721-->4456-->2550-->4881-->2651-->1451-->1834-->2742

Max Bandwidth Value :: 6535


Running time : 0.06 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 753-->3277-->4162-->3943-->3206-->45-->4555-->4736-->3380-->1548-->4059-->875-->4836-->3060-->4685-->1261-->1412-->3874-->4239-->4888-->69-->4047-->476-->1349-->1309-->3254-->596-->1566-->1451-->1834-->2742

Max Bandwidth Value :: 6535


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.04 seconds
Total Running time : 0.14 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 5)
Source Vertex = 1198
Destination Vertex = 2128

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 1198-->2733-->371-->2927-->1634-->2201-->4121-->3626-->3297-->4856-->3927-->4318-->3697-->3464-->1571-->2189-->508-->3512-->2536-->3055-->3028-->1077-->1902-->4057-->1378-->3963-->63-->868-->180-->304-->3322-->1922-->4258-->2128

Max Bandwidth Value :: 7573

Running time : 0.31 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 1198-->2733-->371-->2927-->1634-->2201-->4121-->3626-->3297-->4856-->3927-->4318-->3697-->3464-->1571-->2189-->508-->3512-->1091-->484-->3313-->3316-->4112-->2633-->3372-->1060-->1700-->1075-->1300-->3028-->1077-->1902-->4057-->1378-->3963-->63-->868-->180-->304-->3322-->1922-->4258-->2128

Max Bandwidth Value :: 7573


Running time : 0.06 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 1198-->2733-->371-->2927-->1634-->2201-->4121-->3626-->3297-->4856-->3927-->4318-->3697-->3464-->1571-->2189-->508-->3512-->2536-->3055-->3028-->1077-->1902-->4057-->1378-->3963-->63-->868-->180-->304-->3322-->1922-->4258-->2128

Max Bandwidth Value :: 7573


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.03 seconds
Total Running time : 0.14 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 6)
Source Vertex = 615
Destination Vertex = 321

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 615-->717-->1624-->482-->3717-->2602-->699-->4568-->799-->2827-->4418-->538-->198-->2137-->476-->4047-->69-->4340-->2483-->360-->3126-->965-->2679-->2570-->1215-->321

Max Bandwidth Value :: 5604

Running time : 0.29 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 615-->717-->1624-->482-->3717-->2602-->699-->4568-->799-->2827-->4418-->538-->198-->2137-->476-->4047-->69-->4340-->2483-->360-->3126-->965-->2679-->2570-->1215-->321

Max Bandwidth Value :: 5604


Running time : 0.07 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 615-->717-->1624-->482-->3717-->2602-->699-->4568-->799-->2827-->4418-->538-->198-->2137-->476-->4047-->69-->4340-->2483-->360-->3126-->965-->2679-->2570-->1215-->321

Max Bandwidth Value :: 5604


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.03 seconds
Total Running time : 0.14 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 7)
Source Vertex = 1192
Destination Vertex = 3613

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 1192-->3729-->2265-->3513-->1493-->1456-->1581-->2354-->4708-->3717-->2602-->699-->4568-->1087-->3547-->738-->1091-->3546-->340-->2579-->2610-->2361-->1525-->514-->4624-->624-->1687-->2665-->4046-->1247-->1924-->4759-->3613

Max Bandwidth Value :: 7909

Running time : 0.32 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 1192-->3729-->2265-->3513-->1493-->1456-->1581-->2354-->4708-->3717-->2602-->699-->4568-->799-->2827-->4418-->538-->198-->2137-->476-->4047-->69-->4952-->4906-->1587-->3442-->4835-->1821-->2492-->67-->964-->4837-->402-->882-->340-->2579-->2610-->2361-->1525-->514-->4624-->624-->1687-->2665-->4046-->1247-->1924-->4759-->3613

Max Bandwidth Value :: 7909


Running time : 0.07 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 1192-->3729-->2265-->3513-->1493-->1456-->1581-->2354-->4708-->3717-->2602-->699-->4568-->1087-->3547-->738-->1091-->3546-->340-->2579-->2610-->2361-->1525-->514-->4624-->624-->1687-->2665-->4046-->1247-->1924-->4759-->3613

Max Bandwidth Value :: 7909


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.04 seconds
Total Running time : 0.14 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 8)
Source Vertex = 1233
Destination Vertex = 3744

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 1233-->2166-->1388-->3000-->2993-->2047-->3711-->2925-->1435-->3376-->862-->146-->2306-->211-->3249-->2637-->3075-->63-->868-->180-->304-->612-->1613-->1247-->1924-->2156-->807-->2587-->622-->2180-->352-->3189-->1986-->841-->2041-->2913-->401-->269-->396-->311-->3439-->2658-->1960-->3350-->80-->1874-->966-->991-->3316-->3313-->484-->1091-->738-->3744

Max Bandwidth Value :: 5723

Running time : 0.27 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 1233-->2166-->1388-->3074-->2397-->3254-->596-->1566-->1240-->4045-->60-->1620-->1120-->1447-->4131-->346-->1080-->644-->1062-->1488-->3551-->1768-->186-->4301-->2373-->2421-->1563-->288-->482-->3717-->2602-->699-->4568-->1087-->3547-->738-->3744

Max Bandwidth Value :: 5723


Running time : 0.07 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 1233-->2166-->1388-->3000-->1614-->3735-->3522-->2249-->956-->2655-->691-->3598-->2091-->753-->3277-->4162-->3943-->3206-->45-->4555-->4736-->3380-->1548-->4059-->875-->4836-->3060-->4685-->1261-->1412-->3874-->4239-->4888-->69-->4047-->476-->2137-->198-->538-->4418-->2827-->799-->4568-->1087-->3547-->738-->3744

Max Bandwidth Value :: 5723


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.03 seconds
Total Running time : 0.14 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 9)
Source Vertex = 3243
Destination Vertex = 4391

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 3243-->1763-->1-->3797-->1850-->268-->262-->427-->1549-->3853-->629-->1774-->953-->3073-->2777-->2516-->3259-->1432-->161-->484-->3313-->3316-->991-->966-->1874-->80-->3350-->1960-->2658-->3439-->311-->396-->269-->401-->2913-->2041-->841-->1986-->1438-->2660-->499-->3079-->3990-->2771-->53-->4091-->659-->2412-->1288-->3031-->4484-->2885-->4391

Max Bandwidth Value :: 7341

Running time : 0.3 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 3243-->1763-->1-->3797-->2968-->4143-->3289-->3893-->3316-->3313-->484-->1091-->738-->3547-->1087-->4568-->139-->753-->1493-->3513-->1214-->2319-->1400-->2587-->622-->2180-->352-->3189-->1986-->841-->2041-->2913-->401-->718-->1348-->4363-->3241-->3680-->3605-->2535-->4077-->1058-->4509-->4319-->3710-->3972-->3967-->2044-->630-->3997-->3722-->4941-->4472-->3855-->4777-->1626-->319-->2032-->3050-->3034-->3436-->4482-->4417-->4729-->4638-->3453-->4792-->2475-->4624-->624-->1687-->2665-->4046-->1247-->1924-->4759-->4144-->150-->1321-->1816-->1772-->4589-->1838-->252-->1036-->587-->2073-->4605-->4614-->3047-->1599-->4391

Max Bandwidth Value :: 7341


Running time : 0.07 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 3243-->1763-->1-->3797-->2968-->4143-->3289-->3893-->3316-->3313-->484-->1091-->738-->3547-->1087-->4568-->799-->2827-->4418-->538-->198-->2137-->476-->1349-->1309-->3254-->596-->1566-->1451-->2651-->4881-->2550-->2020-->3858-->3230-->4706-->1404-->3048-->698-->4015-->771-->4461-->1438-->2660-->499-->3079-->3990-->2771-->53-->4091-->659-->2412-->1288-->3031-->4484-->2885-->4391

Max Bandwidth Value :: 7341


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.02 seconds
Total Running time : 0.13 seconds
---------------------------------------------------------------------------



==========================================================
==========================================================
Generating new source-destination pairs! (Iteration : 10)
Source Vertex = 328
Destination Vertex = 4397

Calculating Maximum Bandwidth Path Using Dijkstra's Method without heap
=======================================================================
Max Bandwidth Path  :: 328-->1859-->2925-->1435-->1744-->487-->3424-->3655-->702-->914-->4218-->2783-->37-->1118-->835-->3301-->4979-->486-->1962-->3149-->4191-->2194-->2528-->2931-->3828-->1013-->531-->3987-->1161-->3159-->1858-->2029-->1000-->91-->909-->807-->2587-->622-->2180-->352-->3189-->1986-->1438-->2660-->499-->3079-->3990-->2771-->53-->4091-->659-->3812-->461-->4397

Max Bandwidth Value :: 7586

Running time : 0.3 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Dijkstra's Method with heap
====================================================================
Max Bandwidth Path  :: 328-->1859-->2925-->1435-->1744-->487-->3424-->3655-->702-->914-->4218-->2783-->37-->1118-->835-->3301-->4979-->486-->1962-->3149-->4191-->2194-->2528-->2931-->3828-->1013-->531-->3987-->1161-->3159-->1858-->2029-->1000-->91-->909-->807-->2587-->622-->2180-->352-->3189-->1986-->1438-->2660-->499-->3079-->3990-->2771-->53-->4091-->659-->3812-->461-->4397

Max Bandwidth Value :: 7586


Running time : 0.08 seconds
---------------------------------------------------------------------------


Calculating Maximum Bandwidth Path Using Kruskal's Method
=========================================================
Max Bandwidth Path  :: 328-->1859-->2925-->1435-->1744-->487-->3424-->3655-->702-->914-->4218-->2783-->37-->1118-->835-->3301-->4979-->486-->4698-->3836-->4735-->696-->2880-->2602-->699-->4568-->799-->2827-->4418-->538-->198-->2137-->476-->1349-->1309-->3254-->596-->1566-->1451-->2651-->4881-->2550-->2020-->3858-->3230-->4706-->1404-->3048-->698-->4015-->771-->4461-->1438-->2660-->499-->3079-->3990-->2771-->53-->4091-->659-->3812-->461-->4397

Max Bandwidth Value :: 7586


Algorithm Running Time (excluding the time for data structure creation and intialization) : 0.03 seconds
Total Running time : 0.12 seconds
---------------------------------------------------------------------------


Program done executing..Press any key to quit!
